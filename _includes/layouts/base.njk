<!doctype html>
<html lang="{{ metadata.language }}">
	<head>
		<meta charset="utf-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>{{ title or metadata.title }}</title>
                <meta name="description" content="{{ description or metadata.description }}">
                <link rel="alternate" href="/feed/feed.xml" type="application/atom+xml" title="{{ metadata.title }}">

                <link rel="preconnect" href="https://fonts.googleapis.com" crossorigin>
                <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
                <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;500;600;700&family=Noto+Sans+SC:wght@400;500;700&display=swap" rel="stylesheet">

		{#- Uncomment this if you’d like folks to know that you used Eleventy to build your site!  #}
		{#- <meta name="generator" content="{{ eleventy.generator }}"> #}

		{#-
		Plain-text bundles are provided via the `eleventy-plugin-bundle` plugin:
		1. CSS:
			* Add to a per-page bundle using `{% css %}{% endcss %}`
			* Retrieve bundle content using `{% getBundle "css" %}` or `{% getBundleFileUrl "css" %}`
		2. Or for JavaScript:
			* Add to a per-page bundle using `{% js %}{% endjs %}`
			* Retrieve via `{% getBundle "js" %}` or `{% getBundleFileUrl "js" %}`
		3. Learn more: https://github.com/11ty/eleventy-plugin-bundle
		#}

		{#- Add CSS to the bundle #}
		<style>/* This is an arbitrary CSS string added to the bundle */</style>

		{#- Add the contents of a file to the bundle #}
		<style>{% include "css/index.css" %}</style>

		{#- Or you can add from node_modules #}
		{# <style>{% include "node_modules/something.css" %}</style> #}

		{#- Render the CSS bundle using inlined CSS (for the fastest site performance in production) #}
		<style>{% getBundle "css" %}</style>

		{#- Renders the CSS bundle using a separate file, if you can't set CSP directive style-src: 'unsafe-inline' #}
		{#- <link rel="stylesheet" href="{% getBundleFileUrl "css" %}"> #}

		{#- Add the heading-anchors web component to the JavaScript bundle #}
		<script type="module">{% include "node_modules/@zachleat/heading-anchors/heading-anchors.js" %}</script>
	</head>
	<body>
		<a href="#main" id="skip-link" class="visually-hidden">Skip to main content</a>

               <header>
                       <a href="/" class="home-link">
                               <span class="home-link-label">{{ metadata.title }}</span>
                       </a>

                       <div class="header-actions">
                               {#- Read more about `eleventy-navigation` at https://www.11ty.dev/docs/plugins/navigation/ #}
                               <nav aria-label="Primary">
                                       <h2 class="visually-hidden">Top level navigation menu</h2>
                                       <ul class="nav">
                                       {%- for entry in collections.all | eleventyNavigation %}
                                               <li class="nav-item"><a href="{{ entry.url }}"{% if entry.url == page.url %} aria-current="page"{% endif %}>{{ entry.title }}</a></li>
                                       {%- endfor %}
                                       </ul>
                               </nav>

                               <button class="theme-toggle" type="button" data-color-scheme-toggle aria-label="切换亮色与暗色模式">
                                       <svg class="theme-toggle__icon theme-toggle__icon--sun" viewBox="0 0 24 24" aria-hidden="true">
                                               <circle cx="12" cy="12" r="4.5" fill="currentColor"></circle>
                                               <g stroke="currentColor" stroke-width="1.5" stroke-linecap="round">
                                                       <line x1="12" y1="2.5" x2="12" y2="5"></line>
                                                       <line x1="12" y1="19" x2="12" y2="21.5"></line>
                                                       <line x1="4.5" y1="12" x2="7" y2="12"></line>
                                                       <line x1="17" y1="12" x2="19.5" y2="12"></line>
                                                       <line x1="5.9" y1="5.9" x2="7.7" y2="7.7"></line>
                                                       <line x1="16.3" y1="16.3" x2="18.1" y2="18.1"></line>
                                                       <line x1="5.9" y1="18.1" x2="7.7" y2="16.3"></line>
                                                       <line x1="16.3" y1="7.7" x2="18.1" y2="5.9"></line>
                                               </g>
                                       </svg>
                                       <svg class="theme-toggle__icon theme-toggle__icon--moon" viewBox="0 0 24 24" aria-hidden="true">
                                               <path d="M21 12.79A9 9 0 1 1 11.21 3a7 7 0 0 0 9.79 9.79Z" fill="currentColor"></path>
                                       </svg>
                               </button>
                       </div>
               </header>

		<main id="main">
			<heading-anchors>
				{{ content | safe }}
			</heading-anchors>
		</main>

               <!-- This page `{{ page.url }}` was built on {% currentBuildDate %} -->
               <script>
               (function () {
                       const storageKey = "site-color-scheme";
                       const root = document.documentElement;
                       const toggle = document.querySelector("[data-color-scheme-toggle]");

                       if (!toggle) {
                               return;
                       }

                       const mediaQuery = window.matchMedia("(prefers-color-scheme: dark)");
                       const systemTheme = () => (mediaQuery.matches ? "dark" : "light");

                       const updateButton = (theme) => {
                               toggle.dataset.theme = theme;
                       };

                       let storedTheme = null;
                       try {
                               storedTheme = localStorage.getItem(storageKey);
                       } catch (error) {
                               storedTheme = null;
                       }

                       if (storedTheme === "dark" || storedTheme === "light") {
                               root.dataset.theme = storedTheme;
                               updateButton(storedTheme);
                       } else {
                               root.removeAttribute("data-theme");
                               updateButton(systemTheme());
                       }

                       const handleSystemChange = (event) => {
                               if (!root.dataset.theme) {
                                       updateButton(event.matches ? "dark" : "light");
                               }
                       };

                       if (typeof mediaQuery.addEventListener === "function") {
                               mediaQuery.addEventListener("change", handleSystemChange);
                       } else if (typeof mediaQuery.addListener === "function") {
                               mediaQuery.addListener(handleSystemChange);
                       }

                       toggle.addEventListener("click", () => {
                               const current = root.dataset.theme || systemTheme();
                               const next = current === "dark" ? "light" : "dark";
                               root.dataset.theme = next;
                               updateButton(next);

                               try {
                                       localStorage.setItem(storageKey, next);
                               } catch (error) {
                                       /* noop */
                               }
                       });
               })();
               </script>
               <script type="module" src="{% getBundleFileUrl "js" %}"></script>
	</body>
</html>
